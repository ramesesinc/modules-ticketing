import com.rameses.annotations.*;
import com.rameses.util.*;
import treasury.utils.*;
import ticketing.facts.*;

class TicketingCashReceiptService {
	
	@Service("BillingRuleService")
	def billRuleSvc;

	@DataContext("ticketing_itemaccount")
	def itemAcctEm;
	
	@ProxyMethod
	public def getBilling( def o ) {
		if( o.numadult + o.numchildren + o.numsenior <= 0 )
			throw new Exception("There must be at least 1 guest");
			
		o.numtickets = o.numadult + o.numchildren + o.numsenior;	

		def r = [rulename: "ticketingbilling", params: [txnid:o.txnid], include_items: true ];
		r.factBuilder = new FactBuilder();
		r.factBuilder.facts << new TicketInfo( o );
		def res =  billRuleSvc.execute(r);
		if(res.items ) {
			res.items.each {
				it.item = itemAcctEm.find( [objid: it.billcode] ).first()?.item;			
			}
		};
		def result = [:]
		result.items = res.items;
		result.info = o;

		return result;

	}



}